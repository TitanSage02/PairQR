services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qrninja-backend
    restart: unless-stopped
    environment:
      - PORT=9000
      - NODE_ENV=production
      - JWT_SECRET=change-me-in-production
      - HMAC_SECRET=change-me-in-production
      - CORS_ORIGIN=${CORS_ORIGIN:-https://qrninja.vercel.app}
      - RATE_LIMIT_WINDOW_MS=60000
      - RATE_LIMIT_MAX=60
      - REDIS_URL=redis://redis:6379
      - REDIS_TTL_SECONDS=120
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/qrninja
      - TURN_STATIC_SECRET=change-me-in-production
      - TURN_REALM=qrninja
      - TURN_URIS=turn:coturn:3478?transport=udp,turn:coturn:3478?transport=tcp
    ports:
      - "9000:9000"
    depends_on:
      - redis
      - postgres
      - coturn

  coturn:
    image: instrumentisto/coturn
    container_name: qrninja-coturn
    restart: unless-stopped
    command: >
      --no-cli --no-tcp-relay
      --listening-port=3478
      --realm=qrninja
      --use-auth-secret
      --static-auth-secret=change-me-in-production
      --min-port=49152 --max-port=49200
      --no-stdout-log
    ports:
      - "3478:3478/udp"
      - "3478:3478"

  redis:
    image: redis:7-alpine
    container_name: qrninja-redis
    restart: unless-stopped
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:16-alpine
    container_name: qrninja-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=qrninja
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  redis-data:
  postgres-data:
